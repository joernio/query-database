name: release
on:
  push:
    branches: [master, main]
    tags: ["*"]
jobs:
  release:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: olafurpg/setup-scala@v10
      - uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.coursier
          key: ${{ runner.os }}-sbt-${{ hashfiles('**/build.sbt') }}
      - run: sbt scalafmtCheck test stage
      - run: sbt ciReleaseTagNextVersion createDistribution
      - run: sha512sum ./query-database.tgz > ./query-database.tgz.sha512
      - name: Export ENV vars
        run:
          echo "LATEST_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.LATEST_TAG }}
          release_name: ${{ env.LATEST_TAG }}
          draft: false
          prerelease: false
      - name: Upload query-database.tgz
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./query-database.tgz
          asset_name: quer-database.tgz
          asset_content_type: application/tgz
      - name: Upload query-database.tgs.sha512
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./query-database.tgz.sha512
          asset_name: query-database.tgz.sha512
          asset_content_type: text/plain
